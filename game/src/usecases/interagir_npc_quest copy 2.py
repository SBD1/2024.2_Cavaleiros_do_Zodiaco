from rich.console import Console
from rich.panel import Panel
from rich.table import Table
from ..database import obter_cursor



# Fun√ß√£o para interagir com Saori Kido e listar miss√µes dispon√≠veis
def interagir_npc_quest(console,selected_player_id):
    with obter_cursor() as cursor:
        try:

            cursor.execute("SELECT nome, dialogo_inicial FROM npc_quest LIMIT 1")
            npc = cursor.fetchone()

            if not npc:
                console.print("[bold red]‚ùå Erro: NPC n√£o encontrado![/bold red]")
                return

            nome_npc, dialogo_inicial = npc

            # Exibir di√°logo inicial do NPC
            console.print(Panel(f"[bold cyan]{nome_npc}[/bold cyan]: [italic]{dialogo_inicial}[/italic]", expand=False))

            # Buscar miss√µes dispon√≠veis para o jogador
            cursor.execute("""
                SELECT m.id_missao, m.nome
                FROM Missao m
                LEFT JOIN Player_missao pm ON m.id_missao = pm.id_missao AND pm.id_player = 1
                LEFT JOIN Player_missao pm_anterior ON m.id_missao_anterior = pm_anterior.id_missao AND pm_anterior.id_player = 1
                WHERE (m.id_missao_anterior IS NULL  -- Miss√µes sem pr√©-requisito
                    OR pm_anterior.status_missao = 'c')  -- Ou miss√µes cuja anterior foi conclu√≠da
                AND (pm.status_missao IS NULL OR pm.status_missao = 'ni');  -- Apenas miss√µes n√£o iniciadas


            """, (selected_player_id,))
            
            missoes = cursor.fetchall()

            if not missoes:
                console.print("[bold yellow]‚ö† Nenhuma miss√£o dispon√≠vel no momento.[/bold yellow]")
                return

            # Criar tabela com as miss√µes dispon√≠veis
            table = Table(title="üìú Miss√µes Dispon√≠veis")
            table.add_column("#", justify="center", style="bold")
            table.add_column("Nome da Miss√£o", style="cyan")

            for idx, (id_missao, nome_missao) in enumerate(missoes, start=1):
                table.add_row(str(idx), nome_missao)

            console.print(table)

            # Op√ß√µes do jogador
            console.print("\n[bold green]Digite o n√∫mero da miss√£o para aceitar ou 'T' para aceitar todas.[/bold green]")
            escolha = input("üéØ Escolha uma op√ß√£o: ").strip().lower()

            if escolha == 't':
                for id_missao, _ in missoes:
                    cursor.execute("""
                        UPDATE Player_missao 
                        SET status_missao = 'i' 
                        WHERE id_player = %s AND id_missao = %s;
                    """, (selected_player_id, id_missao))
                console.print("[bold green]‚úÖ Todas as miss√µes foram aceitas![/bold green]")
            
            elif escolha.isdigit():
                escolha = int(escolha)
                if 1 <= escolha <= len(missoes):
                    id_missao_escolhida = missoes[escolha - 1][0]
                    cursor.execute("""
                        UPDATE Player_missao 
                        SET status_missao = 'i' 
                        WHERE id_player = %s AND id_missao = %s;
                    """, (selected_player_id, id_missao_escolhida))
                    console.print(f"[bold green]‚úÖ Miss√£o '{missoes[escolha - 1][1]}' aceita![/bold green]")
                else:
                    console.print("[bold red]‚ùå Op√ß√£o inv√°lida![/bold red]")


        except Exception as e:
            console.print(f"[bold red]Erro:[/bold red] {e}")


